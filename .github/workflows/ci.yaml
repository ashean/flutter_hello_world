name: Flutter CI/CD

# This ensures that only one workflow run for this group is running at a time.
# If a new commit is pushed, it will cancel any in-progress runs.
concurrency:
  group: "pages"
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # This job builds the app, runs tests, and uploads the website files as an artifact.
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build web release
        run: flutter build web --release --base-href /flutter_hello_world/

      # Use the official action to upload the build output as a GitHub Pages artifact.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/web

  # This job takes the artifact from the build job and deploys it to GitHub Pages.
  deploy:
    # This job depends on the 'build' job to succeed first.
    needs: build
    
    # This condition ensures the deploy job ONLY runs on a push to the main branch.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Grant permissions for the GITHUB_TOKEN to deploy to Pages.
    permissions:
      pages: write
      id-token: write
      
    # Define the deployment environment.
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    # This job runs on a fresh virtual machine.
    runs-on: ubuntu-latest
    steps:
      # This official action handles the deployment to GitHub Pages.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4